{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/card-display/card-display.component.css","webpack:///./src/app/card-display/card-display.component.html","webpack:///./src/app/card-display/card-display.component.ts","webpack:///./src/app/pile-of-cards.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+BAA+B,cAAc,2BAA2B,cAAc,mBAAmB,oBAAoB,gBAAgB,kBAAkB,4BAA4B,aAAa,iCAAiC,6BAA6B,iCAAiC,cAAc,mBAAmB,cAAc,eAAe,iBAAiB,wBAAwB,wBAAwB,kDAAkD,iBAAiB,uBAAuB,aAAa,iBAAiB,iCAAiC,yBAAyB,kCAAkC,0BAA0B,kCAAkC,2BAA2B,kCAAkC,sBAAsB,wBAAwB,eAAe,6BAA6B,sBAAsB,oBAAoB,4BAA4B,2BAA2B,qBAAqB,mCAAmC,qBAAqB,gBAAgB,uBAAuB,WAAW,aAAa,WAAW,sBAAsB,gBAAgB,KAAK,gBAAgB,6BAA6B,YAAY,gBAAgB,oBAAoB,gBAAgB,gBAAgB,qBAAqB,mBAAmB,YAAY,iBAAiB,iCAAiC,YAAY,eAAe,kBAAkB,aAAa,gBAAgB,kBAAkB,KAAK,yBAAyB,YAAY,eAAe,kBAAkB,aAAa,gBAAgB,kBAAkB,KAAK,+CAA+C,m5F;;;;;;;;;;;ACA7lD,2FAA2F,8SAA8S,SAAS,4SAA4S,SAAS,68CAA68C,aAAa,4KAA4K,+BAA+B,4ZAA4Z,oBAAoB,qLAAqL,wBAAwB,4oBAA4oB,+BAA+B,0IAA0I,oBAAoB,8F;;;;;;;;;;;;;;;;;;;;;;ACAhwH;AAC8D;AAOhH;IALA;QAME,UAAK,GAAG,WAAW,CAAC;QACb,gBAAW,GAAuB,IAAI,yEAAkB;QACxD,SAAI,GAAuB,IAAI,yEAAkB,CAAC;QAClD,oBAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,iEAAU,CAAC,CAAC,CAAC,uBAAuB;QAC7E,mBAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,gEAAS,CAAC,CAAC,CAAG,uBAAuB;QAC7E,kBAAa,GAAW,CAAC,CAAC;QACzB,gBAAW,GAAW,CAAC,CAAC;IA2ClC,CAAC;IAzCC,gCAAS,GAAT;QACE,kEAAkE;QAClE,IAAI,GAAG,GAAW,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrE,oDAAoD;QACpD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,mCAAY,GAAZ;QACE,sDAAsD;QACtD,IAAI,QAAQ,GAAc,IAAI,gEAAS,CAAC;QACxC,0DAA0D;QAC1D,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,GAAG,EAAL,CAAK,CAAC,CAAC;QAC5E,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,GAAG,EAAL,CAAK,CAAC,CAAC;QAC9E,oFAAoF;QACpF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/D,CAAC;IAED,+CAA+C;IAC/C,kCAAW,GAAX,cAAgB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,CAAC;IAEpE,+BAAQ,GAAR,cAAa,CAAC;IAEd,6EAA6E;IAC7E,wEAAwE;IACxE,kFAAkF;IAClF,wCAAiB,GAAjB,UAAkB,GAAQ;QACxB,IAAI,GAAG,GAAG,EAAE,EAAC,qBAAqB;QAClC,KAAgB,UAAiB,EAAjB,SAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;YAA9B,IAAI,GAAG;YACV,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;gBACxB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACtE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb;SACF;QACD,OAAO,GAAG;IACZ,CAAC;IAED,kBAAkB;IAClB,gCAAS,GAAT,cAAc,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;IAE5C,0BAA0B;IAC1B,8BAAO,GAAP,UAAQ,GAAQ,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC;IAjDlC,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAkDxB;IAAD,mBAAC;CAAA;AAlDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACI;AAEW;AACT;AAC8B;AAe7E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,yFAAoB;aACrB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrBtB,wBAAwB,6CAA6C,cAAc,WAAW,sBAAsB,gBAAgB,oBAAoB,sBAAsB,oBAAoB,eAAe,6BAA6B,kBAAkB,+CAA+C,utB;;;;;;;;;;;ACA/S,oH;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AACT;AAOhD;IAWE;IAAgB,CAAC;IANjB,6CAAc,GAAd;QACE,IAAI,GAAG,GAAE,EAAE,CAAC;QACZ,GAAG,CAAC,uBAAuB,CAAC,GAAE,CAAC,CAAC,EAAE,GAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAC,IAAI,CAAC;QACxE,GAAG,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAC,IAAI,CAAC;QACxE,OAAO,GAAG,CAAC;IACb,CAAC;IAAA,CAAC;IAEF,uCAAQ,GAAR,cAAc,CAAC;IARP;QAAR,2DAAK,EAAE;kCAAM,2DAAI;sDAAA;IAJN,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;;OACW,oBAAoB,CAchC;IAAD,2BAAC;CAAA;AAdgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRkB;AAKnD;IAuFE;QAtFO,UAAK,GAAW,EAAE,CAAC;QAElB,cAAS,GAAG,CAAC,CAAC,CAAC,gEAAgE;IAoFvE,CAAC;IAlFjB,4CAA4C;IACrC,0CAAa,GAApB,UAAqB,SAAoB,EAAE,aAAqB;QAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,iBAAiB;YACzD,KAAgB,UAAe,EAAf,cAAS,CAAC,KAAK,EAAf,cAAe,EAAf,IAAe,EAAE,EAAO,YAAY;gBAA/C,IAAI,GAAG;gBACV,KAAgB,UAAc,EAAd,cAAS,CAAC,IAAI,EAAd,cAAc,EAAd,IAAc,EAAE,EAAM,YAAY;oBAA7C,IAAI,GAAG;oBACV,IAAI,OAAO,GAAS,IAAI,IAAI;oBAC5B,OAAO,CAAC,IAAI,GAAG,GAAG;oBAClB,OAAO,CAAC,KAAK,GAAG,GAAG;oBACnB,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,CAAC,QAAQ,EAAE;wBAAE,OAAO,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG;qBAAE;yBAC1G;wBAAE,OAAO,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK;qBAAE;oBACxC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC,+BAA+B;iBACzD;aACF;SACF;IACH,CAAC;IAED,sCAAS,GAAT;QACE,IAAI,CAAC,mBAAmB,EAAE;QAC1B,wDAAwD;QACxD,8EAA8E;QAC9E,6CAA6C;QAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACvD,CAAC;IAED,uCAAU,GAAV,UAAW,cAAc;QACvB,OAAO,UAAU,CAAO,EAAE,CAAO;YAC/B,IAAI,GAAG,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC;YACxC,IAAI,GAAG,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,GAAG,cAAc,CAAC,SAAS;YAChC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;IAEO,gDAAmB,GAA3B;QACE,kHAAkH;QAClH,6BAA6B;QAC7B,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAAE,IAAI,CAAC,GAAG,IAAI,cAAc,CAAC;YAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YAAC,CAAC,CAAC,YAAY,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAAC,IAAI,CAAC,cAAc,GAAG,CAAC;SAAE;QACvI,uCAAuC;QACvC,wJAAwJ;QACxJ,oHAAoH;QACpH,mCAAmC;QACnC,+CAA+C;IACjD,CAAC;IAED,4CAAe,GAAf,UAAgB,eAAuB;QACrC,IAAI,GAAG,GAAW,EAAE;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;YACxC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SACnF;QACD,OAAO,GAAG;IACZ,CAAC;IAED,2CAAc,GAAd,UAAe,SAAiB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAC,CAAC;IAE5E,mEAAmE;IACnE,qDAAqD;IACrD,0CAAa,GAAb;QACE,KAAK,IAAI,CAAC,GAAW,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACtD,IAAI,GAAG,GAAW,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,8CAA8C;YACzF,IAAI,IAAI,GAAS,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAY,mDAAmD;YACnD,iBAAiB;YAC5D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,EAAqB,WAAW;SACvD;IACH,CAAC;IAED,+BAA+B;IAC/B,6CAAgB,GAAhB,UAAiB,YAAoB;QACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;IAC7E,CAAC;IAED,wEAAwE;IACxE,+CAA+C;IAC/C,gDAAmB,GAAnB,UAAoB,SAAiB;QACnC,gFAAgF;QAChF,KAAc,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;YAApB,IAAI,CAAC;YACR,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC5C;IACH,CAAC;IAEO,4CAAe,GAAvB,UAAwB,GAAW,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,EAAC,CAAC;IAG/E,qCAAQ,GAAR,cAAa,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;IAxFpB,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,kBAAkB,CAyF9B;IAAD,yBAAC;CAAA;AAzF8B;AA2F/B,iCAAiC;AACjC;IAAA;QACE,iBAAY,GAAa,CAAC,OAAO,EAAE,MAAM,CAAC;QAC1C,cAAS,GAAW,CAAC;IACvB,CAAC;IAAD,qBAAC;AAAD,CAAC;;AAED,8EAA8E;AAC9E,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,6CAAU;IACV,iDAAY;IACZ,2CAAS;IACT,6CAAU;AACZ,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;AAED,qDAAqD;AACrD,sDAAsD;AACtD,IAAY,UAcX;AAdD,WAAY,UAAU;IACpB,wCAAO;IACP,uCAAM;IACN,uCAAM;IACN,uCAAM;IACN,uCAAM;IACN,uCAAM;IACN,uCAAM;IACN,uCAAM;IACN,uCAAM;IACN,0CAAQ;IACR,wCAAO;IACP,wCAAO;IACP,wCAAO;AACT,CAAC,EAdW,UAAU,KAAV,UAAU,QAcrB;AAED,kCAAkC;AAClC,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,uCAAO;IACP,2CAAS;AACX,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;AAGD,sBAAsB;AACtB;IAAA;IAIA,CAAC;IAAD,WAAC;AAAD,CAAC;;AAED,wDAAwD;AACxD;IAAA;QACE,UAAK,GAAiB,EAAE,CAAC;QACzB,SAAI,GAAgB,EAAE,CAAC;IACzB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AClJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".BodyWrapper{margin: 30px;}\\r\\ninput[type=\\\"button\\\"]{padding: 15px;border-style: none;border-radius: 50px;font-size: 15px;font-weight: bold;background-color: lightgray; margin:5px;}\\r\\ninput[type=\\\"button\\\"]:hover{background-color: lightBlue;}\\r\\ninput[type=\\\"button\\\"]:focus{outline: 0px;}\\r\\n.HiddenOptions{max-width:0px;max-height:0px;overflow: hidden;background-color: white; display: inline-block;}\\r\\n.ExpandableButtonWrapper:hover .HiddenOptions{ font-size: 20px;vertical-align: middle;padding: 5px;margin-left: 5px; -webkit-animation-duration: .8s; animation-duration: .8s;-webkit-animation-name: slideOpen;animation-name: slideOpen;-webkit-animation-fill-mode: both;animation-fill-mode: both;}\\r\\n.ExpandableButtonWrapper span{display: inline-block; vertical-align: middle;height: 100%;;}\\r\\n.ExpandableButtonWrapper{display: inline-block;vertical-align: top;background-color: lightgrey;border:1px solid lightgrey;border-radius: 50px;}\\r\\n.ExpandableButtonWrapper:hover{padding-right: 13px;}\\r\\n.NoBreakDiv{display: inline-block;}\\r\\nlabel {padding: 7px;margin:5px;display: inline-block;font-size: 20px;    }\\r\\nlabel:hover{background-color: lightblue;}\\r\\nlegend {font-size: 25px; font-weight: bold;}\\r\\n.CardsCount{font-size: 15px;font-weight: normal;}\\r\\n.expandOptions{color: blue;cursor: pointer;}\\r\\n@-webkit-keyframes slideOpen{\\r\\n    10%{max-width: 0px;max-height: 20px;}\\r\\n    100%{max-width:500px;max-height: 20px;}\\r\\n}\\r\\n@keyframes slideOpen{\\r\\n    10%{max-width: 0px;max-height: 20px;}\\r\\n    100%{max-width:500px;max-height: 20px;}\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxhQUFhLENBQUM7QUFDM0IscUJBQXFCLGNBQWMsbUJBQW1CLG9CQUFvQixnQkFBZ0Isa0JBQWtCLDRCQUE0QixDQUFDLFdBQVcsQ0FBQztBQUNySiwyQkFBMkIsNEJBQTRCLENBQUM7QUFDeEQsMkJBQTJCLGFBQWEsQ0FBQztBQUN6QyxlQUFlLGNBQWMsZUFBZSxpQkFBaUIsd0JBQXdCLENBQUMsc0JBQXNCLENBQUM7QUFDN0csK0NBQStDLGdCQUFnQix1QkFBdUIsYUFBYSxpQkFBaUIsQ0FBQyxnQ0FBd0IsQ0FBeEIsd0JBQXdCLGtDQUEwQixBQUExQiwwQkFBMEIsa0NBQTBCLEFBQTFCLDBCQUEwQixDQUFDO0FBQ2xNLDhCQUE4QixzQkFBc0IsQ0FBQyx1QkFBdUIsYUFBYSxFQUFFO0FBQzNGLHlCQUF5QixzQkFBc0Isb0JBQW9CLDRCQUE0QiwyQkFBMkIsb0JBQW9CLENBQUM7QUFDL0ksK0JBQStCLG9CQUFvQixDQUFDO0FBQ3BELFlBQVksc0JBQXNCLENBQUM7QUFFbkMsT0FBTyxhQUFhLFdBQVcsc0JBQXNCLGdCQUFnQixLQUFLO0FBQzFFLFlBQVksNEJBQTRCLENBQUM7QUFDekMsUUFBUSxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQztBQUU1QyxZQUFZLGdCQUFnQixvQkFBb0IsQ0FBQztBQUNqRCxlQUFlLFlBQVksZ0JBQWdCLENBQUM7QUFFNUM7SUFDSSxJQUFJLGVBQWUsaUJBQWlCLENBQUM7SUFDckMsS0FBSyxnQkFBZ0IsaUJBQWlCLENBQUM7Q0FDMUM7QUFIRDtJQUNJLElBQUksZUFBZSxpQkFBaUIsQ0FBQztJQUNyQyxLQUFLLGdCQUFnQixpQkFBaUIsQ0FBQztDQUMxQyIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLkJvZHlXcmFwcGVye21hcmdpbjogMzBweDt9XHJcbmlucHV0W3R5cGU9XCJidXR0b25cIl17cGFkZGluZzogMTVweDtib3JkZXItc3R5bGU6IG5vbmU7Ym9yZGVyLXJhZGl1czogNTBweDtmb250LXNpemU6IDE1cHg7Zm9udC13ZWlnaHQ6IGJvbGQ7YmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5OyBtYXJnaW46NXB4O31cclxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodEJsdWU7fVxyXG5pbnB1dFt0eXBlPVwiYnV0dG9uXCJdOmZvY3Vze291dGxpbmU6IDBweDt9XHJcbi5IaWRkZW5PcHRpb25ze21heC13aWR0aDowcHg7bWF4LWhlaWdodDowcHg7b3ZlcmZsb3c6IGhpZGRlbjtiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgZGlzcGxheTogaW5saW5lLWJsb2NrO31cclxuLkV4cGFuZGFibGVCdXR0b25XcmFwcGVyOmhvdmVyIC5IaWRkZW5PcHRpb25zeyBmb250LXNpemU6IDIwcHg7dmVydGljYWwtYWxpZ246IG1pZGRsZTtwYWRkaW5nOiA1cHg7bWFyZ2luLWxlZnQ6IDVweDsgYW5pbWF0aW9uLWR1cmF0aW9uOiAuOHM7YW5pbWF0aW9uLW5hbWU6IHNsaWRlT3BlbjthbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO31cclxuLkV4cGFuZGFibGVCdXR0b25XcmFwcGVyIHNwYW57ZGlzcGxheTogaW5saW5lLWJsb2NrOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO2hlaWdodDogMTAwJTs7fVxyXG4uRXhwYW5kYWJsZUJ1dHRvbldyYXBwZXJ7ZGlzcGxheTogaW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOiB0b3A7YmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmV5O2JvcmRlcjoxcHggc29saWQgbGlnaHRncmV5O2JvcmRlci1yYWRpdXM6IDUwcHg7fVxyXG4uRXhwYW5kYWJsZUJ1dHRvbldyYXBwZXI6aG92ZXJ7cGFkZGluZy1yaWdodDogMTNweDt9XHJcbi5Ob0JyZWFrRGl2e2Rpc3BsYXk6IGlubGluZS1ibG9jazt9XHJcblxyXG5sYWJlbCB7cGFkZGluZzogN3B4O21hcmdpbjo1cHg7ZGlzcGxheTogaW5saW5lLWJsb2NrO2ZvbnQtc2l6ZTogMjBweDsgICAgfVxyXG5sYWJlbDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7fVxyXG5sZWdlbmQge2ZvbnQtc2l6ZTogMjVweDsgZm9udC13ZWlnaHQ6IGJvbGQ7fVxyXG5cclxuLkNhcmRzQ291bnR7Zm9udC1zaXplOiAxNXB4O2ZvbnQtd2VpZ2h0OiBub3JtYWw7fVxyXG4uZXhwYW5kT3B0aW9uc3tjb2xvcjogYmx1ZTtjdXJzb3I6IHBvaW50ZXI7fVxyXG5cclxuQGtleWZyYW1lcyBzbGlkZU9wZW57XHJcbiAgICAxMCV7bWF4LXdpZHRoOiAwcHg7bWF4LWhlaWdodDogMjBweDt9XHJcbiAgICAxMDAle21heC13aWR0aDo1MDBweDttYXgtaGVpZ2h0OiAyMHB4O31cclxufSJdfQ== */\"","module.exports = \"<div class=\\\"BodyWrapper\\\">\\n    <fieldset style=\\\"display: inline-block;\\\">\\n        <legend>Deck Options</legend>\\n        <div>\\n            <fieldset>\\n                <legend>Select Suit</legend>\\n                <label *ngFor='let cd of this.selectSuitCard'>\\n                    <input type=\\\"checkbox\\\" name=\\\"MaxCard\\\" [value]='cd.obj' [(ngModel)]='cd.Selected' />{{cd.Name}}\\n                </label>\\n            </fieldset>\\n\\n            <fieldset>\\n                <legend>Select Cards</legend>\\n                <label *ngFor='let cd of this.selectValueCard'>\\n                    <input type=\\\"checkbox\\\" name=\\\"MaxCard\\\" [value]='cd.obj' [(ngModel)]='cd.Selected' />{{cd.Name}}\\n                </label>\\n            </fieldset>\\n            <fieldset>\\n                <legend>Number of Decks</legend>\\n                <label><input type=\\\"radio\\\" name=\\\"NumberofDecks\\\" [(ngModel)]='this.NumberOfDecks' [value]=\\\"1\\\" />1</label>\\n                <label><input type=\\\"radio\\\" name=\\\"NumberofDecks\\\" [(ngModel)]='this.NumberOfDecks' [value]=\\\"2\\\" />2</label>\\n                <label><input type=\\\"radio\\\" name=\\\"NumberofDecks\\\" [(ngModel)]='this.NumberOfDecks' [value]=\\\"3\\\" />3</label>\\n                <label><input type=\\\"radio\\\" name=\\\"NumberofDecks\\\" [(ngModel)]='this.NumberOfDecks' [value]=\\\"4\\\" />4</label>\\n                <label><input type=\\\"radio\\\" name=\\\"NumberofDecks\\\" [(ngModel)]='this.NumberOfDecks' [value]=\\\"5\\\" />5</label>\\n                <label><input type=\\\"radio\\\" name=\\\"NumberofDecks\\\" [(ngModel)]='this.NumberOfDecks' [value]=\\\"6\\\" />6</label>\\n                <label><input type=\\\"radio\\\" name=\\\"NumberofDecks\\\" [(ngModel)]='this.NumberOfDecks' [value]=\\\"7\\\" />7</label>\\n                <label><input type=\\\"radio\\\" name=\\\"NumberofDecks\\\" [(ngModel)]='this.NumberOfDecks' [value]=\\\"8\\\" />8</label>\\n                <label><input type=\\\"radio\\\" name=\\\"NumberofDecks\\\" [(ngModel)]='this.NumberOfDecks' [value]=\\\"9\\\" />9</label>\\n                <label><input type=\\\"radio\\\" name=\\\"NumberofDecks\\\" [(ngModel)]='this.NumberOfDecks' [value]=\\\"10\\\" />10</label>\\n            </fieldset>\\n        </div>\\n        <input style=\\\"float:right; margin:10px;\\\" type=\\\"button\\\" value=\\\"GenerateCards\\\" (click)=\\\"this.GenerateDeck()\\\" />\\n    </fieldset>\\n\\n\\n    <div>\\n        <h2>\\n            Deck <span class=\\\"CardsCount\\\">({{this.deckOfCards.Cards.length}} Cards)</span>\\n            <div class=\\\"NoBreakDiv\\\"><input type=\\\"button\\\" value=\\\"Sort\\\" (click)='this.deckOfCards.SortCards()' />\\n            <input type=\\\"button\\\" value=\\\"Shuffle\\\" (click)=\\\"this.deckOfCards.RandomizePile()\\\" />\\n            <input type=\\\"button\\\" value=\\\"Clear Deck\\\" (click)=\\\"this.ResetDeck()\\\" />\\n        </div>\\n        </h2>\\n        <app-card-display style=\\\"display:inline-block;vertical-align: top;\\\" *ngFor='let card of this.deckOfCards.Cards'\\n            [card]='card'></app-card-display>\\n    </div>\\n\\n    <div>\\n        <h2>\\n            Hand <span class=\\\"CardsCount\\\">({{this.hand.Cards.length}} Cards)</span>\\n<div class=\\\"NoBreakDiv\\\">\\n            <input type=\\\"button\\\" value=\\\"Sort\\\" (click)='this.hand.SortCards()' />\\n            <input type=\\\"button\\\" value=\\\"Shuffle\\\" (click)=\\\"this.hand.RandomizePile()\\\" />\\n            <input type=\\\"button\\\" value=\\\"Put Back\\\" (click)=\\\"this.PutHandBack()\\\" />\\n            <div class=\\\"ExpandableButtonWrapper\\\">\\n                <input type=\\\"button\\\" value=\\\"Draw\\\" (click)=\\\"this.DrawACard()\\\" />\\n                <div class=\\\"HiddenOptions\\\">\\n                    <input type=\\\"number\\\" min=\\\"0\\\" [max]='this.deckOfCards.Cards.length' [(ngModel)]='this.cardsToDraw' />\\n                    (0-{{this.deckOfCards.Cards.length}}) Cards\\n                </div>\\n            </div>       </div>\\n\\n        </h2>\\n        <app-card-display style=\\\"display:inline-block;vertical-align: top;\\\" *ngFor='let card of this.hand.Cards' [card]='card'></app-card-display>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PileOfCardsService, CardRange, Card, Cardsuits, CardValues, CardColor } from './pile-of-cards.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Cards-App';\n  public deckOfCards: PileOfCardsService = new PileOfCardsService\n  public hand: PileOfCardsService = new PileOfCardsService;\n  public selectValueCard = this.generateEnumArray(CardValues); //used on the front end\n  public selectSuitCard = this.generateEnumArray(Cardsuits);   //used on the front end\n  public NumberOfDecks: number = 1;                            \n  public  cardsToDraw: number = 0;\n  \n  DrawACard() {\n    //we will draw(s) a random card for the pile we call a deckOfCards\n    let crd: Card[] = this.deckOfCards.DrawRandomCards(this.cardsToDraw);\n    // we will add said card(s) to the pile we call hand\n    this.hand.AddToPileOfCards(crd);\n  }\n  \n  GenerateDeck() {\n    //we will create a card range using the cardRange obj.\n    let carRange: CardRange = new CardRange;\n    // set it using filtered and mapped selections by the user\n    carRange.suit = this.selectSuitCard.filter(a => a.Selected).map(a => a.obj);\n    carRange.value = this.selectValueCard.filter(a => a.Selected).map(a => a.obj);\n    //generate using the GenerateCards function of the pile of cards we call deckOfCards\n    this.deckOfCards.GenerateCards(carRange, this.NumberOfDecks);\n  }\n  \n  //adds the cards from the hand back to the deck\n  PutHandBack() { this.deckOfCards.AddToPileOfCards(this.hand.Cards) }\n  \n  ngOnInit() { }\n  \n  //this function generates the enumArray we will use to bind to the front end.\n  //after we can filter and map the obj in order to fill the CardRange obj\n  //maybe later this can be split out into a seperate class, but for now this works.\n  generateEnumArray(emn: any) {\n    let rtn = [] //{obj,Name,Selected}\n    for (let itm of this.getKeys(emn)) {\n      if (isNaN(parseInt(itm))) {\n        let t = { obj: emn[itm], Name: itm.replace('_', ''), Selected: true };\n        rtn.push(t);\n      }\n    }\n    return rtn\n  }\n  \n  //clears the deck.\n  ResetDeck() { this.deckOfCards.Cards = []; }\n  \n  //simple getKeys function.\n  getKeys(obj: any) { return Object.keys(obj) }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CardDisplayComponent } from './card-display/card-display.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardDisplayComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card{ background-image: url('Deck-72x100x16.gif');height: 100px;width:72px;display: inline-block;margin-top:0px;}\\r\\ndiv.cardWrapper{display: inline-block;margin-right: -60px;height: 100px;}\\r\\n.cardWrapper:hover .card{margin-top:-50px;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FyZC1kaXNwbGF5L2NhcmQtZGlzcGxheS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sNENBQXlELGNBQWMsV0FBVyxzQkFBc0IsZUFBZSxDQUFDO0FBQy9ILGdCQUFnQixzQkFBc0Isb0JBQW9CLGNBQWMsQ0FBQztBQUN6RSx5QkFBeUIsaUJBQWlCLENBQUMiLCJmaWxlIjoic3JjL2FwcC9jYXJkLWRpc3BsYXkvY2FyZC1kaXNwbGF5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvRGVjay03MngxMDB4MTYuZ2lmJyk7aGVpZ2h0OiAxMDBweDt3aWR0aDo3MnB4O2Rpc3BsYXk6IGlubGluZS1ibG9jazttYXJnaW4tdG9wOjBweDt9XHJcbmRpdi5jYXJkV3JhcHBlcntkaXNwbGF5OiBpbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OiAtNjBweDtoZWlnaHQ6IDEwMHB4O31cclxuLmNhcmRXcmFwcGVyOmhvdmVyIC5jYXJke21hcmdpbi10b3A6LTUwcHg7fSJdfQ== */\"","module.exports = \"<div class=\\\"cardWrapper\\\">\\n<div class=\\\"card\\\" [ngStyle]='this.SpriteLocation()'></div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Card } from '../pile-of-cards.service';\n\n@Component({\n  selector: 'app-card-display',\n  templateUrl: './card-display.component.html',\n  styleUrls: ['./card-display.component.css']\n})\nexport class CardDisplayComponent implements OnInit {\n //created the card display as its own component. Just seems required (and simpler).\n //also used a cards sprite sheet to reduce load and memory requirements.\n //this component is fairly self explanitory.\n @Input() card:Card\n  SpriteLocation(){\n    let rtn ={};\n    rtn['background-position-x']= ((14-this.card.value)*72).toString()+'px';\n    rtn['background-position-y'] = ((6-this.card.suit)*100).toString()+'px';\n    return rtn;\n  };\n  constructor() { }\n  ngOnInit() {  }\n\n}\n","import { Injectable, OnInit } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PileOfCardsService implements OnInit {\n  public Cards: Card[] = [];\n  private SortProperties: SortProperties;\n  private sortCount = 0; //not needed currently, will be needed if we change sort orders.\n\n  //This function well generate a set of cards\n  public GenerateCards(CardRange: CardRange, NumberOfTimes: number) {\n    for (let i = 0; i < NumberOfTimes; i++) { //number of decks\n      for (let val of CardRange.value) {      //what cards\n        for (let sui of CardRange.suit) {     //card suits\n          let NewCard: Card = new Card\n          NewCard.suit = sui\n          NewCard.value = val\n          if (NewCard.suit === Cardsuits.hearts || NewCard.suit === Cardsuits.diamonds) { NewCard.color = CardColor.Red }\n          else { NewCard.color = CardColor.Black }\n          this.Cards.push(NewCard) //adding the card to this pile.\n        }\n      }\n    }\n  }\n\n  SortCards() {\n    this.updateSortDirection()\n    // in order to sort we will send in the sort directions,\n    //but since the sort function is called from within its own scope we will have\n    // to put the sort function in its own scope!\n    this.Cards.sort(this._sortCards(this.SortProperties)) \n  }\n\n  _sortCards(SortProperties) {\n    return function (a: Card, b: Card) {\n      let sp1 = SortProperties.PropertyName[0]\n      let sp2 = SortProperties.PropertyName[1]\n      let d = SortProperties.direction\n      return d * ((a[sp1] - (a[sp2] * 100)) - (b[sp1] - (b[sp2] * 100)))\n    }\n  }\n\n  private updateSortDirection() {\n    //below commented out is the ability to change the sort order. I found it confusing when the order kept changing, \n    //so i made the order static.\n    if (!this.SortProperties) { let a = new SortProperties; a.direction = -1; a.PropertyName = ['suit', 'value']; this.SortProperties = a }\n    //uncomment below to change sort order.\n    //  if (this.sortCount ===1 ||  this.sortCount ===4 || this.sortCount ===5){this.SortProperties.PropertyName=this.SortProperties.PropertyName.reverse()}\n    //  if (this.sortCount ===3 ||this.sortCount ===2 ){ this.SortProperties.direction=this.SortProperties.direction*-1}\n    //  this.sortCount=this.sortCount+1\n    //  if (this.sortCount >= 6) {this.sortCount=1}\n  }\n\n  DrawRandomCards(CardCountToDraw: number) {\n    let cds: Card[] = []\n    for (let i = 0; i < CardCountToDraw; i++) {\n      cds = cds.concat(this.DrawSingleCard(this.getRandomNumber(this.Cards.length - 1)))\n    }\n    return cds\n  }\n\n  DrawSingleCard(cardIndex: number) { return this.Cards.splice(cardIndex, 1) }\n\n  //for this we will use the fisher yates in place shuffle algorithm.\n  // this is the standard in place shuffling algorithm \n  RandomizePile() {\n    for (let i: number = this.Cards.length - 1; i > 0; i--) {\n      let rnd: number = this.getRandomNumber(i); // get a random card(from the remaining cards)\n      let hold: Card = this.Cards[i];            //get the next card (moving backwards) in the array\n                                                 //swap the cards.\n      this.Cards[i] = this.Cards[rnd]\n      this.Cards[rnd] = hold                     //Thats it!\n    }\n  }\n\n  //used to add to the this pile.\n  AddToPileOfCards(arrayOfCards: Card[]) {\n    this.Cards = this.Cards.concat(arrayOfCards.splice(0, arrayOfCards.length))\n  }\n\n  //this is if you want to remove a specific array of cards from the pile.\n  // like if you have an array of selected cards.\n  RemoveFromCardsPile(cardArray: Card[]) {\n    //this is not the most efficent, but will work for almost every instance needed.\n    for (let c of cardArray) {\n      this.Cards.splice(this.Cards.indexOf(c), 1)\n    }\n  }\n\n  private getRandomNumber(max: number) { return Math.floor(Math.random() * max) }\n\n  constructor() { }\n  ngOnInit() { this.Cards = []; }\n}\n\n//order and direction for sorting\nexport class SortProperties {\n  PropertyName: String[] = ['value', 'suit']\n  direction: number = 1\n}\n\n//made the suits as an enumerator to simplyfiy future coding, and reuseability\nexport enum Cardsuits {\n  hearts = 1,\n  diamonds = 2,\n  clubs = 3,\n  spades = 4\n}\n\n//Made CardValues enum to simplify future programming\n//the Ace can either be 1 or 14 depending on the need.\nexport enum CardValues {\n  _A = 14,\n  _2 = 2,\n  _3 = 3,\n  _4 = 4,\n  _5 = 5,\n  _6 = 6,\n  _7 = 7,\n  _8 = 8,\n  _9 = 9,\n  _10 = 10,\n  _J = 11,\n  _Q = 12,\n  _K = 13\n}\n\n//again, to simplify future coding\nexport enum CardColor {\n  Red = 1,\n  Black = 2\n}\n\n\n//this is the card obj\nexport class Card {\n  value: CardValues\n  suit: Cardsuits\n  color: CardColor\n}\n\n//This is used to generate Cards. CardGen uses this obj.\nexport class CardRange {\n  value: CardValues[] = [];\n  suit: Cardsuits[] = [];\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}